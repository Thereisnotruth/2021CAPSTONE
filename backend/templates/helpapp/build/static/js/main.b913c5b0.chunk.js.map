{"version":3,"sources":["components/view/LoginView.js","components/ui/Header.js","stores/Auth.js","components/useStore.js","components/ui/SideBar.js","components/ui/HeaderController.js","components/ui/GroupForm.js","components/ui/Member.js","components/ui/GroupMember.js","test.js","components/ui/Char.js","components/ui/Timer.js","components/ui/ElementLeft.js","components/ui/ElementRight.js","components/ui/UserInfoModal.js","components/ui/BoardList.js","components/ui/BoardListView.js","components/ui/PostList.js","components/view/LoginController.js","components/view/SignUpView.js","components/view/SignUpController.js","components/view/HomeView.js","components/view/HomeController.js","components/view/GroupView.js","components/view/GroupController.js","components/view/GroupListView.js","components/view/GroupListController.js","components/view/UserInfoView.js","components/view/UserInfoController.js","components/view/GroupMakeView.js","components/view/GroupMakeController.js","components/view/BoardView.js","components/view/BoardController.js","components/view/IdView.js","components/view/IdController.js","components/view/PwView.js","components/view/PwController.js","components/view/MystudyView.js","components/view/MystudyController.js","components/view/Test.js","components/ViewModel.js","components/Model.js","components/Provider.js","App.js","reportWebVitals.js","index.js"],"names":["LoginView","props","Grid","container","direction","className","type","placeholder","onChange","onIdChange","onPwChange","onClick","login","Divider","to","Header","Button","sideBarOpen","Menu","style","fontSize","header","Auth","observable","isLogged","data","init","this","JSON","parse","localStorage","getItem","userData","setItem","stringify","logout","clear","useStore","SideBar","history","useHistory","sideBarClose","Close","user_id","replace","undefined","HeaderController","useState","open","setOpen","Groupform","list","groupdata","map","index","study_id","key","current_user_count","capacity","study_name","study_total_time","created_at","Member","user_name","exercise_state","start_time","setStartTime","exState","setExState","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","t","Date","h","parseInt","m","s","diff_s","getSeconds","diff_m","getMinutes","diff_h","getHours","WebSocket","onmessage","e","time","d","ddif_s","countdown","setInterval","clearInterval","GroupMember","groupmembers","exercise_start_time","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","Char","on","canvas","width","height","getContext","matchWebGLToCanvasSize","Timer","NativeSelect","exerciseChange","aria-label","value","message","status","start","stop","ElementLeft","item","xs","content","ElementRight","UserInfoModal","Modal","onClose","handleClose","aria-labelledby","aria-describedby","Paper","arm_exp","chest_exp","back_exp","shoulder_exp","belly_exp","leg_exp","BoardList","onboardnameChange","makeboard","boardlist","onClickboard","BoardListView","element","board_id","href","ev","preventDefault","board_name","PostList","postlist","onpost","post_id","post_title","substring","LoginController","viewModel","id","setId","pw","setPw","a","connect","console","log","alert","target","SignupView","message1","onEmailChange","message7","message2","onPwCheChange","message3","onNameChange","message4","genderChange","message5","questChange","message6","onHintChange","message8","Signup","SignupController","email","setEmail","cpw","setCpw","name","setName","gender","setGender","quest","setQuest","hint","setHint","setMessage1","setMessage2","setMessage3","setMessage4","setMessage5","setMessage6","setMessage7","setMessage8","checkAlphaNum","str","test","signUp","HomeView","run","HomeController","setTime","interv","setInterv","setStatus","setmessage","expart","setExpart","today","updatedH","updatedM","updatedS","levelChange","level","send","now","exercise","times","GroupView","groupname","groupmember","ismember","join","disjoin","Exercisemember","GroupController","useRef","memberlist","setMemberlist","studydetail","setStudydetail","setgroupname","setgroupmember","setExercisemember","notice","setnotice","setIsmember","location","pathname","getmember","member","find","filter","length","getstudy_detail","study_detail","GrouplistView","GroupForm","Fab","make","GrouplistController","setList","getlist","ColorButton","withStyles","root","backgroundColor","margin","UserInfoView","variant","handleOpen","color","state","pwChange","onCpwChange","UserInfoController","setMessage","setState","changepw","GroupMakeView","onStudyChange","CapacityChange","MakeStudy","GroupMakeController","user","study","setStudy","setCapacity","makeStudy","BoardView","board","boardtitle","changestate","onRename","boardupdate","makepost","deleteboard","change","ontitleChange","oncontentChange","post","back","posttitle","postuser","postcreat","postcontent","deletepost","postupdatestate","onposttitleChange","onpostcontentChange","updatepost","BoardController","setBoardlist","setPostlist","setBoard_name","setBoard","setBoardtitle","setChangestate","rename","setRename","postid","setPostid","title","setTitle","setContent","setPosttitle","setPostcontent","setPostcreate","setPostuser","updatetitle","setUpdatetitle","updatecontent","setUpdatecontent","getboardlist","del","onboard","boardpostlist","getdetail","postdetail","post_content","alltime","updated_at","idx","indexOf","date","board_delete","board_update","IdView","IdController","findid","detail","PwView","onQuestChange","findPw","PwController","userid","setUserid","findpw","user_pw","MystudyView","MystudyController","mylist","Test","socket","onopen","room_name","ViewModel","model","btn","board_search","bind","Model","loginData","axios","then","res","loginSuccess","catch","error","response","silentRefresh","accessToken","defaults","headers","common","get","question_number","Number","err","socketPath","Provider","exact","path","render","SignUpController","GroupListController","xsrfCookieName","xsrfHeaderName","withCredentials","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b913c5b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LoginView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                <input\r\n                    type='text'\r\n                    className='login' \r\n                    placeholder={'아이디'}\r\n                    onChange={props.onIdChange}\r\n                />\r\n                <input\r\n                    type='password'\r\n                    className='login'\r\n                    placeholder={'비밀번호'}\r\n                    onChange={props.onPwChange}\r\n                />\r\n                <button type='button' className='loginbtn' onClick={props.login}>로그인</button>\r\n                <Divider className='logindivider' />\r\n                <Grid className='link'>\r\n                <Link className='a' to={'/findid'}>아아디 찾기</Link>\r\n                |<Link className='a' to={'/findpw'}>비밀번호 찾기</Link>\r\n                |<Link className='a' to={'/signup'}>회원가입</Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default LoginView;","import React from 'react';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { Menu } from '@material-ui/icons';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Grid className='header'>\r\n            <Button onClick={props.sideBarOpen}>\r\n                <Menu className='sidebar_button'style={{ fontSize: '10vh' }}/>\r\n            </Button>\r\n            {props.header}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Header;","import { observable } from 'mobx';\r\n\r\nconst Auth = observable({\r\n    isLogged: false,\r\n    data: {},\r\n\r\n    init() {\r\n        this.data = JSON.parse(localStorage.getItem('userInfo'));\r\n        if (this.data != null)\r\n            this.isLogged = true;\r\n        else {\r\n            this.isLogged = false;\r\n        }\r\n    },\r\n    login(userData) {\r\n        this.isLogged = true;\r\n        this.data = userData;\r\n        localStorage.setItem('userInfo', JSON.stringify(userData));\r\n    },\r\n    logout() {\r\n        this.isLogged = false;\r\n        localStorage.clear();\r\n    },\r\n});\r\n\r\nexport default Auth;","import { Auth } from '../stores';\r\n\r\nconst useStore = () => ({ Auth });\r\n\r\nexport default useStore;","import React from 'react';\r\nimport { Grid, Button, Divider } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport useStore from '../useStore';\r\nconst SideBar = (props) => {\r\n\tconst { Auth } = useStore();\r\n\tconst history = useHistory();\r\n\tconst test = () => {\r\n\t\tAuth.logout();\r\n\t\thistory.replace('/');\r\n\t}\r\n    return (\r\n        <Grid className='sidebar'>\r\n            <Grid className=\"sidebar-header\">\r\n\t\t\t\t<Button onClick={props.sideBarClose} className='close-button'>\r\n\t\t\t\t\t<Close />\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t\t{\r\n\t\t\t\tAuth.isLogged?\r\n\t\t\t\t<Link to='/info' className='sidebar-link'>\r\n\t\t\t\t\t<Button className='login-button'>\r\n\t\t\t\t\t\t{Auth.data.user_id}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t\t:\t\t\r\n\t\t\t\t<Link to='login' className='sidebar-link'>\r\n\t\t\t\t\t<Button className='login-button'>\r\n\t\t\t\t\t\t로그인\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t}\r\n\t\r\n\t\t\t<Divider />\r\n\t\t\t<Link to='/' className='sidebar-link'>\r\n\t\t\t\t<Button className='sidebar-item'>\r\n\t\t\t\t\t캐릭터\r\n\t\t\t\t</Button>\r\n\t\t\t</Link>\r\n\t\t\t{\r\n\t\t\t\tAuth.isLogged?\r\n\t\t\t<Link to='/mygroup' className='sidebar-link'>\r\n\t\t\t\t<Button className='sidebar-item'>\r\n\t\t\t\t\t내 스터디 목록\r\n\t\t\t\t</Button>\r\n\t\t\t</Link>:''\r\n\t\t\t}\r\n\t\t\t<Link to='/grouplist' className='sidebar-link'>\r\n\t\t\t\t<Button className='sidebar-item'>\r\n\t\t\t\t\t스터디 목록\r\n\t\t\t\t</Button>\r\n\t\t\t</Link>\r\n\t\t\t<Link to='/board' className='sidebar-link'>\r\n\t\t\t\t<Button className='sidebar-item'>\r\n\t\t\t\t\t게시판\r\n\t\t\t\t</Button>\r\n\t\t\t</Link>\r\n\t\t\t{\r\n\t\t\t\tAuth.isLogged?\r\n\t\t\t\t<Button className='login-button' onClick={test}>\r\n\t\t\t\t\t로그아웃\r\n\t\t\t\t</Button>\r\n\t\t\t\t:\t\t\r\n\t\t\t\tundefined\r\n\t\t\t}\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default SideBar;","import React, { useState } from 'react';\r\n\r\nimport Header from './Header';\r\nimport SideBar from './SideBar';\r\n\r\nconst HeaderController = (props) => {\r\n    const [open, setOpen] = useState(0);\r\n\r\n    const sideBarOpen = () => {\r\n        setOpen(1);\r\n    }\r\n    const sideBarClose = () => {\r\n        setOpen(0);\r\n    }\r\n    return (\r\n        <>\r\n        <Header\r\n            header={props.header}\r\n            sideBarOpen={sideBarOpen}\r\n        />\r\n        {\r\n\t\t\t\topen ?\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\topen={open}\r\n                        sideBarClose={sideBarClose}\r\n\t\t\t\t\t/> : undefined\r\n\t\t\t}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HeaderController;","import React from 'react';\r\nimport { Grid} from '@material-ui/core';\r\nimport { Link} from 'react-router-dom';\r\nconst Groupform = (props) => {\r\n\r\n    const list = props.groupdata.map(\r\n        (groupdata, index) => ( <Link className = 'groups'  to={`/group/${groupdata.study_id}`} key={index}>\r\n            <Grid className = 'member'>인원:{groupdata.current_user_count}/{groupdata.capacity}</Grid>\r\n            <Grid className = 'groupname'>{groupdata.study_name}</Grid>\r\n            <Grid className = 'leader'>스터디 장:{groupdata.user_id}</Grid>\r\n            <Grid className = 'extime'>스터디 운동시간:{groupdata.study_total_time}</Grid>\r\n            <Grid className = 'start'>{groupdata.created_at}</Grid>\r\n            \r\n        </Link>)\r\n      );\r\n    return (\r\n        <Grid className = 'groupform'>\r\n            {list}\r\n        </Grid>\r\n        )\r\n};                \r\nexport default Groupform;","import React, { useEffect, useState } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { GiWeightLiftingDown, GiWeightLiftingUp } from \"react-icons/gi\";\r\n\r\nimport MemberTimer from './MemberTimer';\r\n\r\nconst Member = (props) => {\r\n  const { user_id, user_name, exercise_state, start_time } = props;\r\n  const [startTime, setStartTime] = useState(start_time);\r\n  const [exState, setExState] = useState(exercise_state);\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const t = new Date();\r\n    let h = parseInt(start_time / 3600);\r\n    let m = parseInt((start_time - h * 3600) / 60);\r\n    let s = parseInt(start_time - h * 3600 - m * 60);\r\n    \r\n    let diff_s = t.getSeconds() - s;\r\n    let diff_m = t.getMinutes() - m;\r\n    let diff_h = t.getHours() - h;\r\n\r\n    if (diff_s < 0) {\r\n      diff_m--;\r\n      diff_s+= 60;\r\n    }\r\n    if (diff_m < 0) {\r\n      diff_h--;\r\n      diff_m += 60;\r\n    }\r\n    setHours(diff_h);\r\n    setMinutes(diff_m);\r\n    setSeconds(diff_s);\r\n    const socketPath = 'ws://192.168.0.2:8000/ws/helpapp/' + user_id;\r\n    const socket = new WebSocket(socketPath);\r\n    socket.onmessage = function (e) {\r\n      const data = JSON.parse(e.data);\r\n      setExState(data.exercise_state);\r\n      setStartTime(data.time);\r\n      h = parseInt(data.time/3600);\r\n      const d = new Date();\r\n\r\n      setHours(d.getHours() - h);\r\n      m = parseInt((data.time - h * 3600) / 60);\r\n      setMinutes(d.getMinutes() - m);\r\n      s = parseInt(data.time - h * 3600 - m * 60);\r\n      let ddif_s = d.getSeconds() - s;\r\n      setSeconds(d.getSeconds() - s);\r\n      if (ddif_s <= 0) {\r\n        setSeconds(1);\r\n      }\r\n    }\r\n  }, []); \r\n  useEffect(() => {\r\n    if (exState === true) {\r\n      const countdown = setInterval(() => {\r\n        if (parseInt(seconds) < 59) {\r\n          setSeconds(parseInt(seconds) + 1);\r\n        }\r\n        if (parseInt(seconds) >= 59) {\r\n          setSeconds(parseInt(seconds - 59));\r\n          setMinutes(parseInt(minutes) + 1);\r\n          if (parseInt(minutes) >= 59) {\r\n            setMinutes(parseInt(minutes - 59));\r\n            setHours(parseInt(hours) + 1);\r\n          }\r\n        }\r\n      }\r\n      , 1000);\r\n      return () => clearInterval(countdown);\r\n    }\r\n  }, [hours, minutes, seconds])\r\n  return (\r\n    <Grid className ='memberstate'>\r\n      {\r\n        exState?\r\n          <GiWeightLiftingUp/>\r\n          :\r\n          <GiWeightLiftingDown/>\r\n      }\r\n      <Grid>\r\n        {user_name}\r\n      </Grid>\r\n      {\r\n        exState?\r\n        <Grid>\r\n          {hours}:{minutes < 10 ? `0${minutes}` : minutes}:{seconds < 10 ? `0${seconds}` : seconds}\r\n        </Grid>\r\n        :\r\n        ''\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Member;","import React, { useEffect, useState } from 'react';\r\nimport {Grid} from '@material-ui/core';\r\nimport { GiWeightLiftingDown, GiWeightLiftingUp } from \"react-icons/gi\";\r\n\r\nimport Member from './Member';\r\n\r\nconst GroupMember = (props) => {\r\n\r\n    const list = props.groupmembers.map((groupmembers, index) => {  \r\n            return (\r\n                <Member\r\n                    user_id={groupmembers.user_id}\r\n                    user_name={groupmembers.user_name}\r\n                    start_time={groupmembers.exercise_start_time}\r\n                    exercise_state={groupmembers.exercise_state}\r\n                    key={index}\r\n                />\r\n            )\r\n        });\r\n        \r\n    \r\n    return (\r\n        <Grid>\r\n            {list}\r\n        </Grid>\r\n        )\r\n};                \r\nexport default GroupMember;","import { UnityContext } from 'react-unity-webgl';\r\nexport const unityContext = new UnityContext({\r\n    loaderUrl: 'static/Build/help.loader.js',\r\n    dataUrl: 'static/Build/help.data',\r\n    frameworkUrl: 'static/Build/help.framework.js',\r\n    codeUrl: 'static/Build/help.wasm'\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Unity, { UnityContext } from 'react-unity-webgl';\r\nimport { unityContext } from '../../test';\r\n\r\nconst Char = () => {\r\n    useEffect(() => {\r\n        unityContext.on('canvas', (canvas) => {\r\n            if (canvas !== null) {\r\n                canvas.width = 300;\r\n                canvas.height = 400;\r\n                canvas.getContext('webgl');\r\n            }\r\n        });\r\n    }, []);\r\n    return (\r\n        <Grid className ='drawchar'>\r\n             <Unity \r\n                unityContext={unityContext}\r\n                matchWebGLToCanvasSize={false}\r\n            /> \r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Char;","import React, { useState } from 'react';\r\nimport { Grid,NativeSelect,Button } from '@material-ui/core';\r\n\r\nconst Timer = (props) => {\r\n    return (\r\n        <Grid className='Timer'>\r\n            <div>{props.time.h < 10 ? `0${props.time.h}` : props.time.h}:{props.time.m < 10 ? `0${props.time.m}` : props.time.m}:{props.time.s < 10 ? `0${props.time.s}` : props.time.s}</div>\r\n            <NativeSelect\r\n                onChange={props.exerciseChange}\r\n                className='ExerciseSelect'>\r\n                    <option aria-label=\"\" value=\"\" >운동부위</option>\r\n                    <option value=\"1\">등</option>\r\n                    <option value=\"2\">가슴</option>\r\n                    <option value=\"3\">어깨</option>\r\n                    <option value=\"4\">복근</option>\r\n                    <option value=\"5\">팔</option>\r\n                    <option value=\"6\">다리</option>\r\n            </NativeSelect>\r\n            <Grid className ='selecterror'>{props.message}</Grid>\r\n            <Grid className ='btnform'>\r\n                {(props.status===0)?\r\n                    <Grid><Button className ='btn' onClick={props.start}>시작</Button></Grid>:\"\"}\r\n                {(props.status===1)?\r\n                    <Grid><Button className ='btn' onClick={props.stop}>정지</Button></Grid>:\"\"}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Timer;","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst ElementLeft = (props) => {\r\n  return(\r\n    <Grid item xs={6} className='element-left'>\r\n      {props.content}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ElementLeft;","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst ElementRight = (props) => {\r\n  return(\r\n    <Grid item xs={6} className='element-right'>\r\n      {props.content}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ElementRight;","import React from 'react';\r\n\r\nimport { Paper, Grid, Modal } from '@material-ui/core';\r\n\r\nimport { ElementLeft, ElementRight } from '../ui';\r\n\r\nconst UserInfoModal = (props) => {\r\n  return (\r\n    <Modal\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby='user-exercise-info-title'\r\n      aria-describedby='user-exercise-info'\r\n    >\r\n      <Paper className='modal'>\r\n        <Grid container>\r\n          <ElementLeft \r\n            content='팔 경험치 :'\r\n          />\r\n          <ElementRight \r\n            content={props.data.arm_exp}\r\n          />\r\n          <ElementLeft\r\n            content='가슴 경험치 :'\r\n          />\r\n          <ElementRight\r\n            content={props.data.chest_exp}\r\n          />\r\n          <ElementLeft\r\n            content='등 경험치 :'\r\n          />\r\n          <ElementRight\r\n            content={props.data.back_exp}\r\n          />\r\n          <ElementLeft\r\n            content='어깨 경험치 :'\r\n          />\r\n          <ElementRight\r\n            content={props.data.shoulder_exp}\r\n          />\r\n          <ElementLeft\r\n            content='복근 경험치 :'\r\n          />\r\n          <ElementRight\r\n            content={props.data.belly_exp}\r\n          />\r\n          <ElementLeft\r\n            content='하체 경험치 :'\r\n          />\r\n          <ElementRight\r\n            content={props.data.leg_exp}\r\n          />\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default UserInfoModal;","import React from 'react';\r\nimport { Grid, Button, Divider } from '@material-ui/core';\r\n\r\nimport {BoardListView} from '../ui';\r\nimport useStore from '../useStore';\r\nconst BoardList = (props) => {\r\n    return (\r\n        <Grid className='boardlist'>\r\n            <input type='text' \r\n                className='boardmake' \r\n                placeholder={'게시판 이름'} \r\n                onChange={props.onboardnameChange}></input>\r\n            <Button className='makebtn' onClick ={props.makeboard}>게시판 생성</Button>\r\n            <Divider/>\r\n            <BoardListView boardlist={props.boardlist} onClickboard={props.onClickboard}/>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default BoardList;","import React from 'react';\r\nimport { Grid} from '@material-ui/core';\r\nimport { Link} from 'react-router-dom';\r\nconst BoardListView = (props) => {\r\n    const list = props.boardlist.map(\r\n        (element, index) =>(<Grid key={index}>\r\n                <li key={element.board_id}>\r\n                    <a href = 'board' onClick = {function(ev){\r\n                        ev.preventDefault();\r\n                        props.onClickboard(element.board_id,element.board_name);\r\n                   }}>\r\n                        {element.board_name} \r\n                    </a>\r\n                </li>\r\n            </Grid>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <Grid className = 'boardlistform'>\r\n            {list}\r\n        </Grid>\r\n        )\r\n};                \r\nexport default BoardListView;","import React from 'react';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nconst PostList = (props) => {\r\n    const list = props.postlist.map(\r\n        (element, index) =>(<Grid className='postelement' key={index}>\r\n            <li className='postelementlist' key={element.board_id}>\r\n                <a className='postelementa' href = 'board' onClick = {function(ev){\r\n                    ev.preventDefault();\r\n                    props.onpost(element.post_id);\r\n            }}>\r\n                <Grid className='postitems'>\r\n                    <Grid className ='postitemtitle'>{element.post_title}</Grid>\r\n                    <Grid className ='postitemuser'>작성자:{element.user_id}  /  게시일:{element.created_at.substring(0,10)}</Grid>\r\n                </Grid>\r\n                </a>\r\n            </li>\r\n            <Divider/>\r\n        </Grid>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <Grid className = 'boardlistform'>\r\n            {list}\r\n        </Grid>\r\n        )\r\n};                \r\nexport default PostList;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginView from './LoginView';\r\nimport { HeaderController } from '../ui';\r\n\r\nconst LoginController = ({ viewModel }) => {\r\n    const [id, setId] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    const history = useHistory();\r\n    const onIdChange = (e) => {\r\n        setId(e.target.value);\r\n    }\r\n    const onPwChange = (e) => {\r\n        setPw(e.target.value);\r\n    }\r\n\r\n    const login = async () => {\r\n \r\n        const connect = await viewModel.login(id, pw);\r\n        console.log(connect);\r\n        const status = connect?.status;\r\n        if (status === 200) {\r\n            history.replace('/');\r\n        } else if (status === 400 || status === 401) {\r\n            setPw('');\r\n            alert('아이디 또는 비밀번호가 잘못되었습니다.')\r\n        } else {\r\n            setPw('');\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <HeaderController\r\n            header={'로그인'}\r\n        />\r\n        <LoginView \r\n            onIdChange={onIdChange}\r\n            onPwChange={onPwChange}\r\n            login={login}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginController;","import React from 'react';\r\nimport { Grid, Divider,NativeSelect } from '@material-ui/core';\r\n\r\nconst SignupView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                <Grid className='join_title'>아이디</Grid>\r\n                <input\r\n                    type='text'\r\n                    className='login' \r\n                    placeholder={'아이디'}\r\n                    onChange={props.onIdChange}\r\n                />\r\n                <Grid className='errorm'>{props.message1}</Grid>\r\n                <Grid className='join_title'>이메일</Grid>\r\n                    <input\r\n                        type=\"email\"\r\n                        className='login'\r\n                        placeholder={'email'}\r\n                        onChange={props.onEmailChange}\r\n                    />\r\n                <Grid className='errorm'>{props.message7}</Grid>\r\n                <Grid className='join_title'>비밀번호</Grid>\r\n                <input\r\n                    type='password'\r\n                    className='login'\r\n                    placeholder={'비밀번호'}\r\n                    onChange={props.onPwChange}\r\n                />\r\n                <Grid className='errorm'>{props.message2}</Grid>\r\n                <Grid className='join_title'>비밀번호 확인</Grid>\r\n                <input\r\n                    type='password'\r\n                    className='login'\r\n                    placeholder={'비밀번호확인'}\r\n                    onChange={props.onPwCheChange}\r\n                />\r\n                <Grid className='errorm'>{props.message3}</Grid>\r\n                <Grid className='join_title'>이름</Grid>\r\n                <input\r\n                    type='text'\r\n                    className='login'\r\n                    placeholder={'이름'}\r\n                    onChange={props.onNameChange}\r\n                />\r\n                <Grid className='errorm'>{props.message4}</Grid>\r\n                <Grid className='join_title'>성별</Grid>\r\n                <NativeSelect\r\n                    onChange={props.genderChange}\r\n                    className='GenderSelect'>\r\n                    <option aria-label=\"\" value=\"\" >성별</option>\r\n                    <option value=\"M\">남자</option>\r\n                    <option value=\"F\">여자</option>\r\n                </NativeSelect>\r\n                <Grid className='errorm'>{props.message5}</Grid>\r\n                <Grid className='join_title'>힌트</Grid>\r\n                    <NativeSelect\r\n                        onChange={props.questChange}\r\n                        className='GenderSelect'>\r\n                        <option aria-label=\"\" value=\"\" >질문</option>\r\n                        <option value=\"1\">당신의 아버지 성함은?</option>\r\n                        <option value=\"2\">당신의 어머니 성함은?</option>\r\n                        <option value=\"3\">당신이 사는 지역은?</option>\r\n                        <option value=\"4\">당신의 모교 이름은?</option>\r\n                    </NativeSelect>\r\n                    <Grid className='errorm'>{props.message6}</Grid>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='login'\r\n                        placeholder={'힌트대답'}\r\n                        onChange={props.onHintChange}\r\n                    />\r\n                    <Grid className='errorm'>{props.message8}</Grid>\r\n                <button type='button' className='loginbtn' onClick={props.Signup}>가입하기</button>\r\n                <Divider />\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default SignupView;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SignupView from './SignUpView';\r\nimport { HeaderController } from '../ui';\r\n\r\nconst SignupController = ({ viewModel }) => {\r\n    const [id, setId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [pw, setPw] = useState('');\r\n    const [cpw, setCpw] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [quest, setQuest] = useState('');\r\n    const [hint, setHint] = useState('');\r\n    const [message1,setMessage1] = useState('');\r\n    const [message2,setMessage2] = useState('');\r\n    const [message3,setMessage3] = useState('');\r\n    const [message4,setMessage4] = useState('');\r\n    const [message5,setMessage5] = useState('');\r\n    const [message6,setMessage6] = useState('');\r\n    const [message7,setMessage7] = useState('');\r\n    const [message8,setMessage8] = useState('');\r\n    const history = useHistory();\r\n    const checkAlphaNum = (str) => {\r\n        const regexp = /^[a-zA-Z0-9]*$/;\r\n        if(regexp.test(str)){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    function CheckEmail(str){\r\n         var reg_email = /^([0-9a-zA-Z_\\.-]+)@([0-9a-zA-Z_-]+)(\\.[0-9a-zA-Z_-]+){1,2}$/;\r\n        if(!reg_email.test(str)){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    } \r\n    const onIdChange = (e) => {    \r\n        if(e.target.value==='')\r\n            setMessage1('아이디를 입력해주세요.');\r\n        else if (!checkAlphaNum(e.target.value)) {\r\n            setId(e.target.value);\r\n            setMessage1('아이디는 알파벳 소문자, 대문자, 숫자만 가능합니다.');\r\n        } else {\r\n            setId(e.target.value);\r\n            setMessage1('');\r\n        }\r\n    };\r\n    const onEmailChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage7('e-mail을 입력해주세요.');\r\n        else{\r\n            if(CheckEmail(e.target.value)){\r\n                setMessage7('');\r\n                setEmail(e.target.value);}\r\n            else{\r\n                setMessage7('e-mail형식에 맞게 적어주세요.');\r\n            }\r\n        }    \r\n    }\r\n    const onPwChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage2('비밀번호를 입력해주세요.');\r\n        else{\r\n            setMessage2('');\r\n            setPw(e.target.value);}\r\n    }\r\n    const onPwCheChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage3('비밀번호를 입력해주세요.');\r\n        else if(e.target.value!==pw)\r\n            setMessage3('비밀번호가 일치하지 않습니다.');\r\n        else{\r\n            setMessage3('');\r\n            setCpw(e.target.value);\r\n        }\r\n    }\r\n    const onNameChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage4('이름을 입력해주세요.');\r\n        else{\r\n            setMessage4('');\r\n            setName(e.target.value);}\r\n    }\r\n    const genderChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage5('성별을 선택해주세요.');\r\n        else{\r\n            setMessage5('');\r\n            setGender(e.target.value);}\r\n    }\r\n    const questChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage6('질문을 선택해주세요.');\r\n        else{\r\n            setMessage6('');\r\n            setMessage8('');\r\n            setQuest(e.target.value);}\r\n    }\r\n    const onHintChange = (e) => {\r\n        if(message6 !==''){\r\n            setMessage8('질문을 먼저 선택해주세요.');\r\n        }else if(e.target.value===''&& message6 ===''){\r\n            setMessage8('질문의 대답을 적어주세요.');\r\n        }\r\n        else{\r\n            setMessage8('');\r\n            setHint(e.target.value);}\r\n    }\r\n\r\n    const Signup = async () => {\r\n        if(id === ''|| email === ''|| pw === ''|| name === ''|| gender === ''|| quest === ''|| hint === ''){\r\n            alert('모든 정보를 입력해주세요.');\r\n        } else if (cpw === '') {\r\n            alert('비밀번호가 일치하지 않습니다.');\r\n        } else if (!checkAlphaNum(id)) {\r\n            alert('아이디는 알파벳 소문자, 대문자, 숫자만 가능합니다.');\r\n            return;\r\n        } else {\r\n            const connect = await viewModel.signUp(id, pw, name, gender, email, quest, hint);\r\n            const status = connect?.status;\r\n\r\n            if (status === 201) {\r\n                alert('가입되었습니다.');\r\n                history.replace('/login');\r\n            } else if (status === 400) {\r\n                alert('중복된 아이디입니다.');\r\n            } else {\r\n                alert('내부 서버 오류입니다.');\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <HeaderController header='회원가입' />\r\n            <SignupView \r\n                onIdChange={onIdChange}\r\n                onEmailChange={onEmailChange}\r\n                onPwChange={onPwChange}\r\n                onPwCheChange={onPwCheChange}\r\n                onNameChange={onNameChange}\r\n                genderChange={genderChange}\r\n                questChange={questChange}\r\n                onHintChange={onHintChange}\r\n                message1={message1}\r\n                message2={message2}\r\n                message3={message3}\r\n                message4={message4}\r\n                message5={message5}\r\n                message6={message6}\r\n                message7={message7}\r\n                message8={message8}\r\n                Signup={Signup}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupController;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nimport { Timer, Char} from '../ui';\r\n\r\nconst HomeView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className ='IdView'>\r\n                    <Char/>\r\n                    <Timer\r\n                        time={props.time}\r\n                        message={props.message}\r\n                        status={props.status}\r\n                        start={props.start}\r\n                        run={props.run}\r\n                        stop={props.stop}\r\n                        exerciseChange={props.exerciseChange}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default HomeView;","import React, { useState } from 'react';\r\n\r\nimport { HeaderController  } from '../ui';\r\nimport HomeView from './HomeView';\r\nimport { unityContext } from '../../test';\r\n\r\nconst HomeController = ({ viewModel }) => {\r\n    const [time, setTime] = useState({h:0,m:0,s:0});\r\n    const [interv, setInterv] = useState();\r\n    const [status, setStatus] = useState(0);\r\n    const [message, setmessage] = useState('');\r\n    const [expart, setExpart] = useState('');\r\n    let today = new Date();\r\n    const start = () => {\r\n        if(expart===''){\r\n            setmessage('운동부위를 선택해주세요.');\r\n        }\r\n        else{\r\n            if(message ===''){\r\n                run();\r\n                setStatus(1);\r\n                const now = today.getHours() * 3600 + today.getMinutes() * 60 + today.getSeconds();\r\n                setInterv(setInterval(run,1000));\r\n                viewModel.exercise(expart, now, 1);\r\n            }\r\n        }\r\n    };\r\n    var updatedH = time.h, updatedM = time.m, updatedS = time.s;\r\n    const run=()=>{\r\n        if(updatedM===59){\r\n            updatedH++;\r\n            updatedM=0;\r\n            \r\n        }\r\n        if(updatedS===59){\r\n            updatedM++;\r\n            updatedS=-1;\r\n        }\r\n        updatedS++;\r\n        return setTime({h:updatedH,m:updatedM,s:updatedS});\r\n    };\r\n    const stop=()=>{\r\n        if(message===''){\r\n            levelChange();\r\n            clearInterval(interv);\r\n            const times = time.h * 3600 + time.m * 60 + time.s;\r\n            setTime({h:0,m:0,s:0});\r\n            setStatus(0);\r\n            viewModel.exercise(expart, times, 2);\r\n        }\r\n    }\r\n    const levelChange = () => {\r\n        let level;\r\n        if(time.s > 10) {\r\n            level = 3;\r\n        }\r\n        else if(time.s > 5) {\r\n            level = 2;\r\n        }\r\n            else if(time.s > 2)\r\n            {\r\n            level = 1;\r\n            }\r\n            \r\n        unityContext.send('Man', 'LevelChange', level);\r\n    }\r\n\r\n    const exerciseChange = (e) =>{\r\n        if(status===0){\r\n            if(e.target.value==='')\r\n                setmessage('운동부위를 선택해주세요.');\r\n            else{\r\n                setmessage('');\r\n                setExpart(e.target.value);\r\n            }\r\n        }\r\n        else{\r\n            if(expart===e.target.value){\r\n                setmessage('');\r\n            }\r\n            else{\r\n                setmessage('운동중 운동부위 변경은 불가 합니다.');\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <HeaderController header='캐릭터' />\r\n        <HomeView\r\n            time={time}\r\n            message={message}\r\n            status={status}\r\n            start={start}\r\n            run={run}\r\n            stop={stop}\r\n            exerciseChange={exerciseChange}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeController;","import React from 'react';\r\nimport { Grid , Button} from '@material-ui/core';\r\nimport { IoPodiumOutline,IoCalendarOutline } from \"react-icons/io5\";\r\nimport { BsPersonPlus } from \"react-icons/bs\";\r\n\r\nimport { GroupMember } from '../ui';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst GroupView = (props) => {\r\n    const history = useHistory();\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='group'>\r\n                <Grid className='grouplogo'><Grid className='groupname'>{props.groupname}</Grid></Grid>\r\n                \r\n                <Grid className = 'groupmembernumber'>멤버<Grid className = 'groupmember'>{props.groupmember}</Grid>명</Grid>\r\n                <Grid className = 'groupkategorie'>\r\n                    <Grid className='groupicon'><Button className='groupiconbtn'><IoPodiumOutline/><Grid>Rank</Grid></Button></Grid>\r\n                    <Grid className='groupicon'><Button className='groupiconbtn'><IoCalendarOutline/><Grid>Calendar</Grid></Button></Grid>\r\n                    {(props.ismember===false)?\r\n                    <Grid className='groupicon'><Button className='groupiconbtn' onClick={props.join}><BsPersonPlus/><Grid>가입</Grid></Button></Grid>:\r\n                    <Grid className='groupicon'><Button className='groupiconbtn' onClick={props.disjoin}><BsPersonPlus/><Grid>탈퇴</Grid></Button></Grid>}\r\n                </Grid>\r\n                <Grid className ='doing'>\r\n                    <Grid>지금운동중인 멤버 수<Grid className = 'groupmember'>{props.Exercisemember}</Grid></Grid>\r\n                    <GroupMember groupmembers={props.groupmembers}></GroupMember>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            \r\n            \r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default GroupView;","import React, { useState,useEffect, useRef } from 'react';\r\nimport { GiRun } from 'react-icons/gi';\r\n\r\nimport GroupView from './GroupView';\r\nimport { HeaderController } from '../ui';\r\nimport useStore from '../useStore';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst GroupController = ({ viewModel }) => {\r\n    const mounted = useRef(false);\r\n    const [memberlist,setMemberlist] = useState([]);\r\n    const [studydetail,setStudydetail] = useState([]);\r\n    const [groupname,setgroupname] = useState('');\r\n    const [groupmember,setgroupmember] = useState('');\r\n    const [Exercisemember,setExercisemember] = useState('');\r\n    const [notice,setnotice] = useState('notice');\r\n    const { Auth } = useStore();\r\n    const id = Auth.isLogged ? Auth.data.user_id:'';\r\n    const [ismember,setIsmember] = useState(false);\r\n    const history = useHistory();\r\n    const address = (history.location.pathname);\r\n    const study_id = address.replace(/[^0-9]/g,'');\r\n\r\n    const getmember = async () => {\r\n        const test = await viewModel.member(study_id);\r\n        const status = test?.status;\r\n        setMemberlist(test.data);\r\n        if(test.data.find(element => element.user_id === id)===undefined){\r\n            setIsmember(false);\r\n        }else{\r\n            setIsmember(true);\r\n        }\r\n        const exercise = test.data.filter(element => true === element.exercise_state).length;\r\n        setExercisemember(exercise);\r\n        \r\n        if (status === 200) {\r\n            \r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    const getstudy_detail = async () => {\r\n        const test = await viewModel.study_detail(study_id);\r\n        const status = test?.status;\r\n        setStudydetail(test.data);\r\n        setgroupname(test.data.study_name);\r\n        setgroupmember(test.data.current_user_count);\r\n        \r\n        if (status === 200) {\r\n            \r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getstudy_detail();\r\n        getmember();\r\n    },[]);\r\n      \r\n        \r\n        const join=()=>{\r\n            if(Auth.isLogged === false){ history.replace('/login');}\r\n            else{\r\n                if(ismember===false){\r\n                    {\r\n                        if(studydetail.current_user_count===studydetail.capacity){\r\n                            alert('더 이상 해당그룹에 가입할 수 없습니다.');\r\n                        }else{\r\n                            try {\r\n                                viewModel.join(id,study_id);\r\n                                alert('가입되었습니다.');\r\n                                setnotice('가입됨');\r\n                                setIsmember(true);\r\n                                getstudy_detail();\r\n                                getmember();\r\n                            } catch (e) {\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    alert('이미 가입된 곳 입니다.');\r\n                }\r\n            }  \r\n        }\r\n        const disjoin=()=>{\r\n            if(Auth.isLogged === false){ history.replace('/login');}\r\n            else{\r\n                if(ismember===true){\r\n                    if(studydetail.current_user_count===1){\r\n                        viewModel.disjoin(id,study_id);\r\n                        alert('탈퇴되었습니다.');\r\n                        history.replace('/grouplist');\r\n                    }else{\r\n                        try {\r\n                            viewModel.disjoin(id,study_id);\r\n                            alert('탈퇴되었습니다.');\r\n                            setnotice('탈퇴됨');\r\n                            setIsmember(false);\r\n                            getstudy_detail();\r\n                            getmember();\r\n                        } catch (e) {\r\n                            console.log(e);\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    alert('해당 스터디의 맴버가 아닙니다.');\r\n                }\r\n            }\r\n        }\r\n        \r\n       \r\n    return (\r\n        <>\r\n        <HeaderController header={'그룹'}/>\r\n        < GroupView \r\n            groupname={groupname}\r\n            groupmember={groupmember}\r\n            Exercisemember={Exercisemember}\r\n            notice={notice}\r\n            groupmembers = {memberlist}\r\n            ismember = {ismember}\r\n            join = {join}\r\n            disjoin = {disjoin}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GroupController;","import React from 'react';\r\nimport { Grid ,Link} from '@material-ui/core';\r\n\r\nimport { IoSearch } from \"react-icons/io5\";\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { GroupForm  } from '../ui';\r\n\r\nconst GrouplistView = (props) => {\r\n    console.log(props.groupdata);\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className ='grouplist'>\r\n                {/*<Grid className ='searchform'>\r\n                    <IoSearch/>\r\n                    <input \r\n                    type='text'\r\n                    className = 'searchgroup'\r\n                    placeholder={'검색'}\r\n                    onChange={props.onsearchChange}\r\n                    />\r\n                    <button type='button' onClick={props.onsearchClick}>Search</button>\r\n    </Grid>*/}\r\n                    <GroupForm groupdata = {props.groupdata}/>\r\n                <Fab className = 'makegroupbtn' aria-label=\"add\" onClick = {props.make}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default GrouplistView;","import React, { useState,useEffect } from 'react';\r\n\r\nimport { HeaderController } from '../ui';\r\nimport GrouplistView from './GroupListView';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useStore from '../useStore';\r\n\r\n\r\nconst GrouplistController = ({ viewModel }) => {\r\n    \r\n    const [Search,setSearch] = useState('');\r\n    const [list,setList] = useState([]);\r\n    const { Auth } = useStore();\r\n    const history = useHistory();\r\n\r\n    const getlist = async () => {\r\n        const test = await viewModel.list();\r\n        const status = test?.status;\r\n        console.log(test);\r\n        setList(test.data);\r\n        console.log(list);\r\n        if (status === 200) {\r\n            \r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n      },[]);\r\n    console.log(list);\r\n\r\n\r\n    const make = () =>{\r\n        if(Auth.isLogged){\r\n            history.replace('groupmake');}\r\n        else{\r\n            alert('그룹을 생성하려면 로그인이 필요합니다.');\r\n            history.replace('login');\r\n        }\r\n            \r\n    }\r\n    return (\r\n        <>\r\n            <HeaderController header='그룹 목록' />\r\n            <GrouplistView \r\n                make={make}\r\n                groupdata = {list}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GrouplistController;","import React from 'react';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\nimport { ElementLeft, ElementRight, UserInfoModal } from '../ui';\r\n\r\nconst ColorButton = withStyles({\r\n    root: {\r\n        backgroundColor: '#8AD3FC',\r\n        margin: '20px 0',\r\n        '&:hover': {\r\n            backgroundColor: '#30B0FD'\r\n        }\r\n    }\r\n})(Button);\r\nconst UserInfoView = (props) => {\r\n    return(\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                    <Grid container>\r\n                        <ElementLeft\r\n                            content='아이디 :'\r\n                        />\r\n                        <ElementRight\r\n                            content={props.data.user_id}\r\n                        />\r\n                        <ElementLeft\r\n                            content='이름 :'\r\n                        />\r\n                        <ElementRight\r\n                            content={props.data.user_name}\r\n                        />\r\n                        <Grid item xs={12}>\r\n                            <ColorButton\r\n                                variant='contained'\r\n                                className='element-center'\r\n                                onClick={props.handleOpen}\r\n                                color='primary'\r\n                            >\r\n                                내 운동 정보\r\n                            </ColorButton>\r\n                        </Grid>\r\n                        <UserInfoModal\r\n                            open={props.open}\r\n                            handleClose={props.handleClose}\r\n                            data={props.data}\r\n                        />\r\n                        {(props.state===1)?\r\n                        <Grid item xs={12}>\r\n                            <ColorButton\r\n                                variant='contained'\r\n                                className='element-center'\r\n                                onClick={props.pwChange}\r\n                                color='primary'\r\n                            >\r\n                                비밀번호 변경\r\n                            </ColorButton>\r\n                        </Grid>:''}\r\n                        {(props.state===2)?\r\n                            <><ElementLeft\r\n                                content='변경비밀번호 :'\r\n                            />\r\n                            <ElementRight\r\n                                content={\r\n                                    <input\r\n                                        type='password'\r\n                                        className='element-input'\r\n                                        onChange={props.onPwChange}\r\n                                    />\r\n                                }\r\n                            />\r\n                            <ElementLeft\r\n                                content='비밀번호 확인 :'\r\n                            />\r\n                            <ElementRight\r\n                                content={\r\n                                    <>\r\n                                    <input\r\n                                        type='password'\r\n                                        className='element-input'\r\n                                        onChange={props.onCpwChange}\r\n                                    />\r\n                                    <Grid className='errorm'>{props.message}</Grid>\r\n                                    </>\r\n                                }\r\n                            />\r\n                            <Grid item xs={12}>\r\n                                <ColorButton\r\n                                    variant='contained'\r\n                                    className='element-center'\r\n                                    onClick={props.pwChange}\r\n                                    color='primary'\r\n                                >\r\n                                    비밀번호 변경\r\n                                </ColorButton>\r\n                            </Grid></>:''}\r\n                    </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default UserInfoView;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserInfoView from './UserInfoView';\r\n\r\nimport { HeaderController } from '../ui';\r\nimport useStore from '../useStore';\r\n\r\nconst { Auth } = useStore();\r\n\r\nconst UserInfoController = ({ viewModel }) => {\r\n    const [data] = useState(Auth.data);\r\n    const [open, setOpen] = useState(false);\r\n    const [pw, setPw] = useState('');\r\n    const [cpw, setCpw] = useState('');\r\n    const [message,setMessage] = useState('');\r\n    const [state,setState] = useState(1);\r\n    const user_id = Auth.isLogged ? Auth.data.user_id:''\r\n    const onPwChange = (e) => {\r\n        if (cpw===''){\r\n            setMessage('');\r\n            setPw(e.target.value);\r\n        }else{\r\n            if(e.target.value===cpw){\r\n                setMessage('');\r\n                setPw(e.target.value);\r\n            }else{\r\n                setMessage('비밀번호가 일치하지 않습니다.');\r\n                setPw(e.target.value);\r\n            }\r\n        }\r\n    }\r\n    const onCpwChange = (e) => {\r\n        if (e.target.value !== pw) {\r\n            setMessage('비밀번호가 일치하지 않습니다.');\r\n            setCpw(e.target.value);\r\n        } else {\r\n            setMessage('');\r\n            setCpw(e.target.value);\r\n        }\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const pwChange = async () => {\r\n        if(state===1){\r\n            setPw('');\r\n            setCpw('');\r\n            setMessage('');\r\n            setState(2);\r\n        }else if(state===2){\r\n            if(pw===cpw&&pw!==''){\r\n                await viewModel.changepw(user_id,pw);\r\n                alert('비밀번호가 변경되었습니다.');\r\n            }\r\n            setState(1);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <HeaderController\r\n            header={'회원정보'}\r\n        />\r\n        <UserInfoView\r\n            data={data}\r\n            open={open}\r\n            handleOpen={handleOpen}\r\n            handleClose={handleClose}\r\n            onPwChange={onPwChange}\r\n            onCpwChange={onCpwChange}\r\n            pwChange={pwChange}\r\n            message={message}\r\n            state={state}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserInfoController;","import React from 'react';\r\nimport { Grid, Divider,NativeSelect } from '@material-ui/core';\r\n\r\nconst GroupMakeView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                <Grid className='join_title'>스터디명</Grid>\r\n                <input\r\n                    type='text'\r\n                    className='login' \r\n                    placeholder={'스터디명'}\r\n                    onChange={props.onStudyChange}\r\n                />\r\n                <Grid className='errorm'>{props.message1}</Grid>\r\n                <Grid className='join_title'>최대인원수</Grid>\r\n                <NativeSelect\r\n                    onChange={props.CapacityChange}\r\n                    className='GenderSelect'>\r\n                    <option aria-label=\"\" value=\"\" ></option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n\t\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t<option value=\"15\">15</option>\r\n\t\t\t\t\t<option value=\"20\">20</option>\r\n                </NativeSelect>\r\n                <Grid className='errorm'>{props.message2}</Grid>\r\n                <button type='button' className='loginbtn' onClick={props.MakeStudy}>스터디생성</button>\r\n                <Divider />\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default GroupMakeView;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GroupMakeView from './GroupMakeView';\r\nimport { HeaderController } from '../ui';\r\nimport useStore from '../useStore';\r\n\r\nconst GroupMakeController = ({ viewModel }) => {\r\n    const { Auth } = useStore();\r\n\tconst user = Auth.data.user_id;\r\n    const [study, setStudy] = useState('');\r\n    const [capacity, setCapacity] = useState('');\r\n    const [message1,setMessage1] = useState('');\r\n    const [message2,setMessage2] = useState('');\r\n    const history = useHistory();\r\n\t\r\n    const onStudyChange = (e) => {\r\n        if(e.target.value==='')\r\n            setMessage1('스터디명을 입력해주세요.');\r\n        else{\r\n            setStudy(e.target.value);\r\n            setMessage1('');\r\n        }\r\n    };\r\n    const CapacityChange = (e) =>{\r\n        if(e.target.value==='')\r\n            setMessage2('최대인원수를 선택해주세요.');\r\n        else{\r\n            setMessage2('');\r\n            setCapacity(e.target.value);}\r\n    }\r\n    const MakeStudy = async () => {\r\n\t\tconsole.log('user_id: ',user);\r\n        console.log('study_name: ',study);\r\n        console.log('capacity: ', capacity);\r\n        if(study==''|| capacity==''){\r\n            alert('모든 정보를 입력해주세요.');\r\n        }else{\r\n            try {\r\n                await viewModel.makeStudy(user,study,capacity);\r\n                alert('스터디가 생성되었습니다.');\r\n                history.replace('/grouplist');\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <HeaderController header='그룹생성' />\r\n            <GroupMakeView \r\n                onStudyChange={onStudyChange}\r\n                CapacityChange={CapacityChange}\r\n                message1={message1}\r\n                message2={message2}\r\n                MakeStudy={MakeStudy}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GroupMakeController;","import React from 'react';\r\nimport { Grid,Button,Divider } from '@material-ui/core';\r\nimport { BoardList,PostList} from '../ui';\r\n\r\nconst BoardView = (props) => {\r\n    return (\r\n        <Grid className='boardmainview'>\r\n            <Grid className='boardview'>\r\n                <BoardList boardlist={props.boardlist} \r\n                            onboardnameChange={props.onboardnameChange}\r\n                            makeboard ={props.makeboard}\r\n                            onClickboard = {props.onClickboard}\r\n                            boardlist={props.boardlist}/>\r\n                {(props.board!=='')?\r\n                <Grid className='element'><Grid className='nameboard'>{props.boardtitle}</Grid>\r\n                {(props.state===1)?<Grid className='board'>\r\n                    <Grid className='boardbtn'>\r\n                        {!props.changestate?\r\n                        <Grid className='boardbtns'><Button className='makebtn' onClick ={props.makepost}>글쓰기</Button>\r\n                        <Button className='makebtn' onClick ={props.deleteboard}>삭제</Button>\r\n                        <Button className='makebtn' onClick ={props.change}>수정</Button></Grid>:\r\n                        <Grid className='boardupdate'><input \r\n                        type='text'\r\n                        className ='boardname'\r\n                        onChange={props.onRename}\r\n                        />\r\n                        <Button className='makebtn' onClick ={props.boardupdate}>수정</Button></Grid> }\r\n                    </Grid>\r\n                    <Divider/>\r\n\r\n                    <PostList onpost={props.onpost} postlist = {props.postlist}/>\r\n                </Grid>:''}\r\n                {(props.state===2)?<Grid className='board'>\r\n                    <Grid className='post'>\r\n                        <textarea\r\n                            type='text'\r\n                            className='title' \r\n                            placeholder={'제목'}\r\n                            onChange={props.ontitleChange}\r\n                        />\r\n                        <textarea\r\n                            type='text'\r\n                            className='content'\r\n                            placeholder={'내용을 입력하세요.'}\r\n                            onChange={props.oncontentChange}\r\n                        />\r\n                        <Grid className='btncol'>\r\n                            <Button className='makebtn' onClick = {props.post}>게시글 올리기</Button>\r\n                            <Button className='makebtn' onClick = {props.back}>돌아가기</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>:''}\r\n                {(props.state===3)?<Grid className='board'>   \r\n                    <Grid className = 'postview'>\r\n                        <Grid className='postviewtitle'>\r\n                            <Grid className='postviewtitlefirst'>\r\n                                <Grid className='title'><p>제 목:</p></Grid>\r\n                                <Grid className='titlename'>{props.posttitle}</Grid>\r\n                            </Grid>\r\n                            <Grid className='postviewtitlesecon'>\r\n                                <Grid className='user'>작성자:</Grid>\r\n                                <Grid className='username'>{props.postuser}</Grid>\r\n                            </Grid>\r\n                            <Grid className='date'>{props.postcreat}</Grid>\r\n                        </Grid>\r\n                        <Grid className='postblank'></Grid>\r\n                        <Grid className='content'>{props.postcontent}</Grid>\r\n                    </Grid>\r\n                    {(props.user_id===props.postuser)?\r\n                    <Grid className ='postbtn'>\r\n                        <Button className='makedelbtn' onClick ={props.deletepost}>글삭제</Button>\r\n                        <Button className='makeupbtn' onClick ={props.postupdatestate}>글수정</Button></Grid>:''}\r\n                </Grid>:''}\r\n                {(props.state===4)?<Grid className='board'>\r\n                    <Grid className='post'>\r\n                        <textarea\r\n                            type='text'\r\n                            className='title' \r\n                            onChange={props.onposttitleChange}\r\n                        >{props.posttitle}</textarea>\r\n                        <textarea\r\n                            type='text'\r\n                            className='content'\r\n                            onChange={props.onpostcontentChange}\r\n                        >{props.postcontent}</textarea>\r\n                        <Grid className='btncol'>\r\n                            <Button className='makebtn' onClick = {props.updatepost}>수정</Button>\r\n                            <Button className='makebtn' onClick = {props.back}>돌아가기</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>:''}\r\n                \r\n            </Grid>:''}\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default BoardView;","import React, { useState,useEffect } from 'react';\r\n\r\nimport { HeaderController  } from '../ui';\r\nimport BoardView from './BoardView';\r\nimport useStore from '../useStore';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst BoardController = ({ viewModel }) => {\r\n    const { Auth } = useStore();\r\n    const history = useHistory();\r\n    const [boardlist,setBoardlist] = useState([]);\r\n    const [postlist,setPostlist] = useState([]);\r\n    const user_id = Auth.isLogged ? Auth.data.user_id:''\r\n    const [board_name,setBoard_name] = useState('');\r\n    const [board,setBoard] = useState('');\r\n    const [boardtitle,setBoardtitle] = useState('');\r\n    const [changestate,setChangestate] = useState(false);\r\n    const [rename,setRename] = useState('');\r\n    const [state,setState] = useState(1);\r\n    const [postid,setPostid] = useState('');\r\n    const [title,setTitle] = useState('');\r\n    const [content,setContent] = useState('');\r\n    const [posttitle,setPosttitle] = useState('');\r\n    const [postcontent,setPostcontent] = useState('');\r\n    const [postcreat,setPostcreate] = useState('');\r\n    const [postuser,setPostuser] = useState('');\r\n    const [updatetitle,setUpdatetitle] = useState('');\r\n    const [updatecontent,setUpdatecontent] = useState('');\r\n\r\n\r\n    const ontitleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const oncontentChange = (e) => {\r\n        setContent(e.target.value);\r\n    }\r\n    const post =() =>{\r\n        if(title ===''){\r\n            alert('제목을 적어주세요.');\r\n        }\r\n        else if(content === '') {\r\n            alert('내용을 작성하지 않았습니다.');\r\n        }\r\n        else{\r\n            viewModel.makepost(board,user_id,title,content);\r\n            setState(1);\r\n            setBoard(board);\r\n            onboard(board);\r\n        }\r\n    }\r\n    const getboardlist = async (del) => {\r\n        const test = await viewModel.boardlist();\r\n        const status = test?.status;\r\n\r\n        if(test.data.length !==0){\r\n            if(board===''){\r\n                setBoard(test.data[0].board_id);\r\n                setBoardtitle(test.data[0].board_name);\r\n                onboard(test.data[0].board_id);}\r\n            else if(del===1){\r\n                setBoard(test.data[0].board_id);\r\n                setBoardtitle(test.data[0].board_name);\r\n                onboard(test.data[0].board_id);\r\n            }else{\r\n                setBoard(board);\r\n                onboard(board);\r\n            }\r\n        }\r\n        if (status === 200) {\r\n            setBoardlist(test.data);\r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getboardlist(0);\r\n      },[]);\r\n\r\n    const makeboard = ()=>{\r\n        if(Auth.isLogged === false){ history.replace('/login');}\r\n        else{\r\n            if(board_name===''){\r\n                alert('게시판 이름을 작성해야합니다.');\r\n            }\r\n            else{\r\n                viewModel.makeboard(user_id, board_name);\r\n                setBoard_name('');\r\n                getboardlist(0);\r\n            }\r\n        }\r\n    }\r\n    const onboardnameChange= (e) =>{\r\n        setBoard_name(e.target.value);\r\n    }\r\n    const onClickboard =(board_id,title)=>{\r\n        setBoardtitle(title);\r\n        onboard(board_id);\r\n    }\r\n    const onboard= async(board_id) =>{\r\n        setBoard(board_id);\r\n        const test = await viewModel.boardpostlist(board_id);\r\n        setTitle('');\r\n        setContent('');\r\n        setRename('');\r\n        setState(1);\r\n        setPostlist(test.data);\r\n        setChangestate(false);\r\n    }\r\n    const onpost= (post_id) =>{\r\n        setTitle('');\r\n        setContent('');\r\n        setRename('');\r\n        setState(3);\r\n        getdetail(post_id);\r\n    }\r\n    const deleteboard = () =>{\r\n        viewModel.board_delete(user_id,board);\r\n        getboardlist(1);\r\n    }\r\n    const makepost = ()=>{\r\n        if(Auth.isLogged === false){ history.replace('/login');}\r\n        else{\r\n            setTitle('');\r\n            setContent('');\r\n            setRename('');\r\n            setState(2);\r\n            /*{history.push({\r\n                pathname: \"/postmake\",\r\n                state: {board_id: board}\r\n              })}*/\r\n        }\r\n    }\r\n    const boardupdate =() =>{\r\n        if(rename===''){setChangestate(false);}\r\n        else{\r\n            setBoardtitle(rename);\r\n            viewModel.board_update(board,rename,user_id);\r\n            setRename('');\r\n            setChangestate(false);\r\n            getboardlist(0);\r\n        }\r\n    }\r\n    const change =() =>{\r\n        setChangestate(true);\r\n    }\r\n    const onRename =(e) =>{\r\n        setRename(e.target.value);\r\n    }\r\n    const getdetail = async (post_id) => {\r\n        const test = await viewModel.postdetail(post_id);\r\n        const status = test?.status;\r\n        const data = test.data\r\n        setPostid(data.post_id);\r\n        setPosttitle(data.post_title);\r\n        setPostcontent(data.post_content);\r\n        const alltime = data.updated_at;\r\n        const idx = alltime.indexOf(\"T\");\r\n        const date = alltime.substring(0,idx);\r\n        setPostcreate(date);\r\n        setPostuser(data.user_id);\r\n        if (status === 200) {\r\n            \r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    const deletepost =()=>{//post_id, user_id\r\n        viewModel.deletepost(postid,user_id);\r\n        onboard(board);\r\n        setState(1);\r\n    }\r\n    \r\n    const postupdatestate=()=>{//post_id, user_id, post_title, post_content\r\n        setState(4);\r\n    }\r\n    const onposttitleChange = (e) => {\r\n        setUpdatetitle(e.target.value);\r\n    }\r\n    const onpostcontentChange = (e) => {\r\n        setUpdatecontent(e.target.value);\r\n    }\r\n    \r\n    const updatepost=()=>{//post_id, user_id, post_title, post_content\r\n        viewModel.updatepost(postid, user_id, updatetitle, updatecontent);\r\n        setState(1);\r\n        onboard(board);\r\n    }\r\n    const back=()=>{\r\n        if(state===2){setState(1);}\r\n        else{setState(3);}\r\n        \r\n    }\r\n    return (\r\n        <>\r\n        <HeaderController header='게시판' />\r\n        <BoardView \r\n            onboardnameChange={onboardnameChange}\r\n            makeboard={makeboard}\r\n            makepost={makepost}\r\n            onboard={onboard}\r\n            onpost={onpost}\r\n            deleteboard={deleteboard}\r\n            boardupdate={boardupdate}\r\n            change={change}\r\n            onRename={onRename}\r\n            ontitleChange={ontitleChange}\r\n            oncontentChange={oncontentChange}\r\n            post={post}\r\n            deletepost={deletepost}\r\n            updatepost={updatepost}\r\n            onposttitleChange={onposttitleChange}\r\n            onpostcontentChange={onpostcontentChange}\r\n            postupdatestate={postupdatestate}\r\n            onClickboard={onClickboard}\r\n            back={back}\r\n            board={board}\r\n            user_id={user_id}\r\n            state={state}\r\n            boardlist = {boardlist}\r\n            postlist = {postlist}\r\n            changestate={changestate}\r\n            posttitle={posttitle}\r\n            postcontent={postcontent}\r\n            postcreat={postcreat}\r\n            postuser={postuser}\r\n            boardtitle={boardtitle}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardController;","import React from 'react';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst IdView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                    <Grid className='join_title'>이메일</Grid>\r\n                    <input\r\n                        type=\"email\"\r\n                        className='login'\r\n                        placeholder={'email'}\r\n                        onChange={props.onEmailChange}\r\n                    />\r\n                    <button type='button' className='loginbtn' onClick={props.find}>아이디 찾기</button>\r\n                    <Divider/>\r\n                    <Grid className='link'>\r\n                        <Link className='a' to={'/login'}>로그인</Link>|\r\n                        <Link className='a' to={'/findpw'}>비밀번호 찾기</Link>|\r\n                        <Link className='a' to={'/signup'}>회원가입</Link>\r\n                    </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default IdView;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IdView from './IdView';\r\nimport { HeaderController } from '../ui';\r\n\r\nconst IdController = ({ viewModel }) => {\r\n    const [email, setEmail] = useState('');\r\n    const history = useHistory();\r\n\r\n    const onEmailChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const find = async () => {\r\n        const connect = await viewModel.findid(email);\r\n        console.log(connect);\r\n        const status = connect?.status;\r\n        if (status === 200) {\r\n            alert('당신의 아이디는'+connect.data.user_id+'입니다.');\r\n            history.replace('/login');\r\n        } else if (status === 404 || status === 403) {\r\n            if(email===''){\r\n                alert('email을 작성하셔야 합니다.');\r\n            }\r\n            else{\r\n            alert(connect.data.detail);}\r\n        } else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <HeaderController\r\n            header={'아이디찾기'}\r\n        />\r\n        <IdView\r\n            onEmailChange={onEmailChange}\r\n            find={find}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IdController;","import React from 'react';\r\nimport { Grid, Divider, NativeSelect } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PwView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className='contents'>\r\n                <Grid className='logo'>HELP</Grid>\r\n                    <Grid className='join_title'>아이디</Grid>\r\n                    <input\r\n                        type='text'\r\n                        className='login'\r\n                        placeholder={'아이디'}\r\n                        onChange={props.onIdChange}\r\n                    />\r\n                    <Grid className='join_title'>이름</Grid>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='login'\r\n                        placeholder={'이름'}\r\n                        onChange={props.onNameChange}\r\n                    />\r\n                    <Grid className='join_title'>힌트</Grid>\r\n                    <NativeSelect\r\n                        onChange={props.onQuestChange}\r\n                        className='GenderSelect'>\r\n                        <option aria-label=\"\" value=\"\" >질문</option>\r\n                        <option value=\"1\">당신의 아버지 성함은?</option>\r\n                        <option value=\"2\">당신의 어머니 성함은?</option>\r\n                        <option value=\"3\">당신이 사는 지역은?</option>\r\n                        <option value=\"4\">당신의 모교는?</option>\r\n                    </NativeSelect>\r\n                    <input\r\n                        type=\"text\"\r\n                        className='login'\r\n                        placeholder={'힌트대답'}\r\n                        onChange={props.onHintChange}\r\n                    />\r\n                    <button type='button' className='loginbtn' onClick ={props.findPw}>비밀번호 찾기</button>\r\n                    <Divider/>\r\n                    <Grid className='link'>\r\n                        <Link className='a' to={'/login'}>로그인</Link>|\r\n                        <Link className='a' to={'/findid'}>아이디 찾기</Link>|\r\n                        <Link className='a' to={'/signup'}>회원가입</Link>\r\n                    </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default PwView;","import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PwView from './PwView';\r\nimport { HeaderController } from '../ui';\r\n\r\nconst PwController = ({ viewModel }) => {\r\n    const history = useHistory();\r\n    const [quest, setQuest] = useState('');\r\n    const [hint, setHint] = useState('');\r\n    const [userid, setUserid] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const onHintChange = (e) =>{\r\n        setHint(e.target.value);\r\n    }\r\n    const onQuestChange = (e) =>{\r\n        setQuest(e.target.value);\r\n    }\r\n    const onNameChange = (e) =>{\r\n        setName(e.target.value);\r\n    }\r\n    const onIdChange = (e) =>{\r\n        setUserid(e.target.value);\r\n    }\r\n    const findPw = async() =>{\r\n        if(quest==='' || hint==='' || name==='' || userid===''){\r\n            alert('위의 항목들을 모두 작성해야합니다.');\r\n        }else{\r\n            const connect = await viewModel.findpw(userid,name,quest,hint);\r\n            const status = connect?.status;\r\n            if (status === 200) {\r\n                alert(userid+'아이디의 비밀번호는'+connect.data.user_pw+'입니다.');\r\n                history.replace('/login');\r\n            } else if (status === 403) {\r\n                alert(connect.data.message);\r\n            }else if(status === 404){\r\n                alert(connect.data.detail);\r\n            }\r\n             else {\r\n                alert('내부 서버 오류입니다.');\r\n            }\r\n        }\r\n    }\r\n    const find = async () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <HeaderController\r\n            header={'비밀번호찾기'}\r\n        />\r\n        <PwView\r\n            onHintChange={onHintChange}\r\n            onQuestChange={onQuestChange}\r\n            onNameChange={onNameChange}\r\n            onIdChange={onIdChange}\r\n            findPw={findPw}\r\n        />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PwController;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { GroupForm  } from '../ui';\r\n\r\nconst MystudyView = (props) => {\r\n    return (\r\n        <Grid container direction='column'>\r\n            <Grid className ='grouplist'>\r\n                    <GroupForm groupdata = {props.groupdata}/>\r\n            </Grid>\r\n        </Grid>\r\n    )    \r\n};\r\n\r\nexport default MystudyView;","import React, { useState,useEffect } from 'react';\r\n\r\nimport { HeaderController } from '../ui';\r\nimport MystudyView from './MystudyView';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useStore from '../useStore';\r\n\r\n\r\nconst MystudyController = ({ viewModel }) => {\r\n    const [list,setList] = useState([]);\r\n    const { Auth } = useStore();\r\n    const history = useHistory();\r\n    const id = Auth.isLogged ? Auth.data.user_id:'';\r\n\r\n    const getlist = async () => {\r\n        const test = await viewModel.mylist(id);\r\n        const status = test?.status;\r\n        console.log(test);\r\n        setList(test.data);\r\n        console.log(list);\r\n        if (status === 200) {\r\n            \r\n        }\r\n        else {\r\n            alert('내부 서버 오류입니다.');\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getlist();\r\n      },[]);\r\n    return (\r\n        <>\r\n            <HeaderController header='내스터디' />\r\n            <MystudyView \r\n                groupdata = {list}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MystudyController;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Test = () => {\r\n  const [test, setTest] = useState('1234');\r\n  useEffect(() => {\r\n    let socketPath = 'ws://127.0.0.1:8000/ws/helpapp/' + 'abcd';\r\n\r\n    const socket = new WebSocket(socketPath);\r\n    socket.onopen = function () {\r\n      socket.send(\r\n        JSON.stringify({\r\n          room_name: 'abcd',\r\n          message: 'efgh',\r\n        }),\r\n      );\r\n    };\r\n  }, [])\r\n  return(\r\n    <div>\r\n      {test}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Test;","class ViewModel {\r\n    constructor(model) {\r\n       this.model = model;\r\n       this.login = this.login.bind(this);\r\n    }\r\n    makeStudy = (user, study, capacity) => {\r\n        return this.model.makeStudy(user, study, capacity);\r\n    }\r\n    login = (id, pw) => {\r\n        return this.model.login(id, pw);\r\n    }\r\n    signUp = (id, pw, name, gender, email, quest, hint) => {\r\n        return this.model.signUp(id, pw, name, gender, email, quest, hint);\r\n    }\r\n    exercise = (expart, times, btn) => {\r\n        return this.model.exercise(expart, times, btn);\r\n    }\r\n\r\n    join = (user,study) => {\r\n        return this.model.join(user,study);\r\n    }\r\n    disjoin = (user,study) => {\r\n        return this.model.disjoin(user,study);\r\n    }\r\n    list = async() => {\r\n        return await this.model.list();\r\n    }\r\n    member = async(study_id) => {\r\n        return await this.model.member(study_id);\r\n    }\r\n    study_detail = async(study_id) => {\r\n        return await this.model.study_detail(study_id);\r\n    }\r\n    boardlist = async() => {\r\n        return await this.model.boardlist();\r\n    }\r\n    makeboard = async(user_id, board_name) => {\r\n        return await this.model.makeboard(user_id, board_name);\r\n    }\r\n    board_search = async(board_id) => {\r\n        return await this.model.board_search(board_id);\r\n    }\r\n    board_update = async(board_id,board_name,user_id) => {\r\n        return await this.model.board_update(board_id,board_name,user_id);\r\n    }\r\n    board_delete = async(user_id,board_id) => {\r\n        return await this.model.board_delete(user_id,board_id);\r\n    }\r\n    boardpostlist = async(board_id) => {\r\n        return await this.model.boardpostlist(board_id);\r\n    }\r\n    makepost = async(board_id,user_id,post_title,post_content) => {\r\n        return await this.model.makepost(board_id,user_id,post_title,post_content);\r\n    }\r\n    postdetail = async(post_id) => {\r\n        return await this.model.postdetail(post_id);\r\n    }\r\n    updatepost = async(post_id, user_id, post_title, post_content) => {\r\n        return await this.model.updatepost(post_id, user_id, post_title, post_content);\r\n    }\r\n    deletepost = async(post_id, user_id) => {\r\n        return await this.model.deletepost(post_id, user_id);\r\n    }\r\n    findid = (email) => {\r\n        return this.model.findid(email);\r\n    }\r\n    findpw = (userid,user_name,quest,hint) => {\r\n        return this.model.findpw(userid,user_name,quest,hint);\r\n    }\r\n    changepw = (user_id,user_pw)=>{\r\n        return this.model.changepw(user_id,user_pw);\r\n    }\r\n    mylist = async(user_id) => {\r\n        return await this.model.mylist(user_id);\r\n    }\r\n}\r\n\r\nexport default ViewModel;","import { ContactSupportOutlined } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\nimport useStore from './useStore';\r\n\r\nconst { Auth } = useStore();\r\n\r\nclass Model {\r\n    constructor() {\r\n        this.login = this.login.bind(this);\r\n    }\r\n    // 스터디 생성\r\n    makeStudy(user, study, capacity) {\r\n        axios.post('/studies/new', {\r\n            user_id: user,\r\n            study_name:study,\r\n            capacity: capacity,\r\n        })\r\n        .then((res) => {\r\n            console.log(res);\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n    // 로그인\r\n    login = (id, pw) => {\r\n        this.loginData = {\r\n            id,\r\n            pw,\r\n        };\r\n        const result = axios.post('/login', {\r\n            user_id: id,\r\n            user_pw: pw\r\n        })\r\n        .then((res) => {\r\n            this.loginSuccess(res);\r\n            return res;\r\n        })\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n        return result;\r\n    }\r\n    silentRefresh = () => {\r\n        axios.post('/silent-refresh', this.loginData)\r\n        .then(this.loginSuccess)\r\n        .catch(() => {\r\n            Auth.logout();\r\n        });\r\n    }\r\n    loginSuccess = (response) => {\r\n        const accessToken = response.data;\r\n        Auth.login(response.data);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n        // setTimeout(this.silentRefresh, JWT_EXPIRY_TIME - 60000)\r\n    }\r\n    // 회원가입\r\n    signUp(id, pw, name,gender, email, quest, hint) {\r\n        const result = axios.post('/users/new', {\r\n            user_id: id,\r\n            user_pw: pw,\r\n            user_name: name,\r\n            gender: gender,\r\n            question_number: Number(quest),\r\n            hint: hint,\r\n            email: email\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((err) => {\r\n            return err.response;\r\n        })\r\n        return result;\r\n    }\r\n    // 운동\r\n    exercise(expart, times, btn) {\r\n        let socketPath = 'ws://192.168.0.2:8000/ws/helpapp/' + Auth.data.user_id;\r\n        console.log(btn)\r\n        const socket = new WebSocket(socketPath);\r\n\r\n        socket.onopen = function () {\r\n            socket.send(\r\n                JSON.stringify({\r\n                    user_id: Auth.data.user_id,\r\n                    time: times,\r\n                    expart: expart,\r\n                    btn: btn\r\n                })\r\n            )\r\n        }\r\n    }\r\n    //가입\r\n    join(user,study) {\r\n        axios.post('../studies/'+study+'/join', {\r\n            study_id: study,\r\n            user_id: user\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n    //탈퇴\r\n    disjoin(user,study) {\r\n        axios.post('../studies/'+study+'/disjoin', {\r\n            study_id: study,\r\n            user_id: user\r\n        })\r\n        .then((res) => {\r\n            return res;\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n    }\r\n    //스터디 목록\r\n    list = () => { \r\n        let data = axios.get('/studies')\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //스터디 세부정보\r\n    study_detail = (study_id) =>{ \r\n        let data = axios.post('../../studies/'+study_id,{\r\n            study_id: study_id})\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //스터디내의 유저들정보\r\n    member = (study_id) =>{ \r\n        let data = axios.post('../../studies/'+study_id+'/userlist',{\r\n            study_id: study_id\r\n        })\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //게시판 리스트\r\n    boardlist = () =>{ \r\n        let data = axios.get('/boards')\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //게시판 생성\r\n   makeboard = (user_id, board_name) =>{ \r\n    let data = axios.post('/boards/new',{\r\n        user_id: user_id, \r\n        board_name: board_name\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n   //게시판 조회\r\n   board_search = (board_id) =>{ \r\n    let data = axios.post('/boards/'+board_id,{\r\n        board_id: board_id\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n    //게시판 수정\r\n    board_update = (board_id,board_name,user_id) =>{ \r\n    let data = axios.post('/boards/'+board_id+'/update',{\r\n        board_id: board_id,\r\n        board_name: board_name,\r\n        user_id: user_id\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n    //게시판 삭제\r\n    board_delete = (user_id,board_id) =>{ \r\n    let data = axios.post('/boards/'+board_id+'/delete',{\r\n        user_id: user_id,\r\n        board_id: board_id\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n    //특정 게시판글들 조회\r\n    boardpostlist = (board_id) =>{ \r\n    let data = axios.post('/boards/'+board_id+'/board_postlist',{\r\n        board_id: board_id\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n    //게시판글 작성\r\n    makepost= (board_id,user_id,post_title,post_content) =>{ \r\n    let data = axios.post('/posts/new',{\r\n        board_id: board_id,\r\n        user_id: user_id,\r\n        post_title: post_title,\r\n        post_content: post_content\r\n    })\r\n        .then((res)=>{\r\n            return res;});\r\n    return data;\r\n    }\r\n    //특정 게시글 조회\r\n    postdetail = (post_id) =>{ \r\n        let data = axios.post('/posts/'+post_id,{\r\n            post_id: post_id\r\n        })\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //특정 게시글 수정\r\n    updatepost = (post_id, user_id, post_title, post_content) =>{ \r\n        let data = axios.post('/posts/'+post_id+'/update',{\r\n            post_id: post_id,\r\n            user_id: user_id,\r\n            post_title: post_title,\r\n            post_content: post_content\r\n\r\n        })\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    //특정 게시글 삭제\r\n    deletepost = (post_id, user_id) =>{ \r\n        let data = axios.post('/posts/'+post_id+'/delete',{\r\n            post_id: post_id,\r\n            user_id: user_id\r\n        })\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    findid =(email)=>{\r\n        const data = axios.post('/users/find_id',{\r\n            email: email\r\n        })\r\n        .then((res)=>{\r\n            return res;})\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n        return data;\r\n    }\r\n    findpw =(userid,user_name,quest,hint)=>{\r\n        const data = axios.post('/users/find_pw',{\r\n            user_id: userid, \r\n            user_name: user_name, \r\n            question_number: Number(quest),\r\n            hint: hint\r\n        })\r\n        .then((res)=>{\r\n            return res;})\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n        return data;\r\n    }\r\n    //비밀번호변경\r\n    changepw = (id, pw) => {\r\n        this.loginData = {\r\n            id,\r\n            pw,\r\n        };\r\n        const result = axios.post('/users/change_pw', {\r\n            user_id: id,\r\n            user_pw: pw\r\n        })\r\n        .then((res) => {\r\n            this.loginSuccess(res);\r\n            return res;\r\n        })\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n        return result;\r\n    }\r\n    //내 스터디 목록\r\n    mylist = (user_id) =>{ \r\n        const data = axios.post('users/'+user_id+'/mygroups',{\r\n            user_id: user_id\r\n        })\r\n            .then((res)=>{\r\n                return res;});\r\n        return data;\r\n    }\r\n    \r\n}\r\n\r\nexport default Model;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport {\r\n    HomeController, LoginController, SignUpController, GroupMakeController, GroupListController, GroupController,\r\n    UserInfoController, BoardController, Test ,IdController, PwController, MystudyController\r\n} from './view';\r\nimport ViewModel from './ViewModel'; \r\nimport Model from './Model';\r\n\r\nconst Provider = () => {\r\n    const model = new Model();\r\n    const viewModel = new ViewModel(model);\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' render={ () => <HomeController viewModel={viewModel} /> } />\r\n                <Route path='/login' render={ () => <LoginController viewModel={viewModel} /> } />\r\n                <Route path='/signup' render={ () => <SignUpController viewModel={viewModel} /> } />\r\n                <Route path='/groupmake' render={ () => <GroupMakeController viewModel={viewModel} /> } />\r\n                <Route path='/grouplist' render={ () => <GroupListController viewModel={viewModel} /> } />\r\n                <Route path='/group' render={ () => <GroupController viewModel={viewModel} /> } />\r\n                <Route path='/info' render={ () => <UserInfoController viewModel={viewModel} /> } />\r\n                <Route path='/board' render={ () => <BoardController viewModel={viewModel} /> } />\r\n                <Route path='/findid' render={ () => <IdController viewModel={viewModel} /> } />\r\n                <Route path='/findpw' render={ () => <PwController viewModel={viewModel} /> } />\r\n                <Route path='/mygroup' render={ () => <MystudyController viewModel={viewModel} /> } />\r\n                <Route path='/test' render={ () => <Test viewModel={viewModel} /> } />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Provider;\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Provider from './components/Provider';\r\n\r\nimport './scss/main.scss';\r\n\r\nimport useStore from './components/useStore';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken';\r\naxios.defaults.xsrfHeaderName = 'x-CSRFToken';\r\naxios.defaults.withCredentials = true\r\n\r\nfunction App() {\r\n  const { Auth } = useStore();\r\n  Auth.init();\r\n  return (\r\n    <Provider />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}